{"created": 1750968496.0332067, "duration": 15.166577339172363, "exitcode": 1, "root": "/home/gman/workspace/Crypto-Bots/Active/Single-File/v6", "environment": {}, "summary": {"passed": 124, "failed": 7, "total": 131, "collected": 131}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/__init__.py", "type": "Package"}, {"nodeid": "trading/__init__.py", "type": "Package"}]}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient", "outcome": "passed", "result": [{"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_empty_order_ids", "type": "TestCaseFunction", "lineno": 540}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_error_handling", "type": "TestCaseFunction", "lineno": 577}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_failure_unknown_reason", "type": "TestCaseFunction", "lineno": 690}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_failure_with_error_response", "type": "TestCaseFunction", "lineno": 656}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_failure_with_failure_reason", "type": "TestCaseFunction", "lineno": 673}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_malformed_response_no_results_key", "type": "TestCaseFunction", "lineno": 620}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_malformed_response_not_dict", "type": "TestCaseFunction", "lineno": 609}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_malformed_response_results_item_not_dict", "type": "TestCaseFunction", "lineno": 699}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_malformed_response_results_not_list", "type": "TestCaseFunction", "lineno": 631}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_no_client", "type": "TestCaseFunction", "lineno": 529}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_success", "type": "TestCaseFunction", "lineno": 550}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_generate_client_order_id", "type": "TestCaseFunction", "lineno": 142}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_generate_client_order_id_single_char_id", "type": "TestCaseFunction", "lineno": 148}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_error_handling", "type": "TestCaseFunction", "lineno": 209}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_invalid_json_response", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_malformed_response_accounts_not_list", "type": "TestCaseFunction", "lineno": 243}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_malformed_response_no_accounts_key", "type": "TestCaseFunction", "lineno": 233}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_malformed_response_not_dict", "type": "TestCaseFunction", "lineno": 223}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_no_client", "type": "TestCaseFunction", "lineno": 181}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_success", "type": "TestCaseFunction", "lineno": 193}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_order_malformed_response_no_order_key", "type": "TestCaseFunction", "lineno": 505}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_order_malformed_response_order_not_dict", "type": "TestCaseFunction", "lineno": 516}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_empty_product_id", "type": "TestCaseFunction", "lineno": 285}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_error_handling", "type": "TestCaseFunction", "lineno": 314}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_malformed_response_candles_not_list", "type": "TestCaseFunction", "lineno": 328}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_no_client", "type": "TestCaseFunction", "lineno": 271}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_success", "type": "TestCaseFunction", "lineno": 295}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_error_handling", "type": "TestCaseFunction", "lineno": 366}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_error_handling_retry", "type": "TestCaseFunction", "lineno": 381}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_no_client", "type": "TestCaseFunction", "lineno": 344}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_success", "type": "TestCaseFunction", "lineno": 356}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_handle_api_response_with_to_dict_object", "type": "TestCaseFunction", "lineno": 157}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_empty_api_key", "type": "TestCaseFunction", "lineno": 123}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_empty_api_secret", "type": "TestCaseFunction", "lineno": 136}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_failure", "type": "TestCaseFunction", "lineno": 105}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_no_api_key", "type": "TestCaseFunction", "lineno": 116}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_no_api_secret", "type": "TestCaseFunction", "lineno": 129}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_success", "type": "TestCaseFunction", "lineno": 78}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_with_arguments", "type": "TestCaseFunction", "lineno": 90}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_empty_product_id", "type": "TestCaseFunction", "lineno": 419}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_failure", "type": "TestCaseFunction", "lineno": 451}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_failure_unknown_error", "type": "TestCaseFunction", "lineno": 482}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_failure_with_error_response", "type": "TestCaseFunction", "lineno": 467}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_invalid_side", "type": "TestCaseFunction", "lineno": 408}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_malformed_response_not_dict", "type": "TestCaseFunction", "lineno": 644}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_no_client", "type": "TestCaseFunction", "lineno": 394}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_success", "type": "TestCaseFunction", "lineno": 430}]}, {"nodeid": "tests/test_coinbase_client.py", "outcome": "passed", "result": [{"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_config.py::TestConfig", "outcome": "passed", "result": [{"nodeid": "tests/test_config.py::TestConfig::test_api_key_empty", "type": "TestCaseFunction", "lineno": 81}, {"nodeid": "tests/test_config.py::TestConfig::test_api_key_missing", "type": "TestCaseFunction", "lineno": 68}, {"nodeid": "tests/test_config.py::TestConfig::test_api_keys_loaded_successfully", "type": "TestCaseFunction", "lineno": 50}, {"nodeid": "tests/test_config.py::TestConfig::test_api_secret_empty", "type": "TestCaseFunction", "lineno": 106}, {"nodeid": "tests/test_config.py::TestConfig::test_api_secret_missing", "type": "TestCaseFunction", "lineno": 94}, {"nodeid": "tests/test_config.py::TestConfig::test_candle_granularity_seconds", "type": "TestCaseFunction", "lineno": 155}, {"nodeid": "tests/test_config.py::TestConfig::test_config_module_main_block_runs", "type": "TestCaseFunction", "lineno": 167}, {"nodeid": "tests/test_config.py::TestConfig::test_default_general_settings", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_config.py::TestConfig::test_trading_pairs_structure_and_defaults", "type": "TestCaseFunction", "lineno": 132}]}, {"nodeid": "tests/test_config.py", "outcome": "passed", "result": [{"nodeid": "tests/test_config.py::TestConfig", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_connection.py", "outcome": "passed", "result": [{"nodeid": "tests/test_connection.py::test_api_connection", "type": "Function", "lineno": 13}]}, {"nodeid": "tests/test_logger.py::TestLogger", "outcome": "passed", "result": [{"nodeid": "tests/test_logger.py::TestLogger::test_file_handler_creation_io_error", "type": "TestCaseFunction", "lineno": 132}, {"nodeid": "tests/test_logger.py::TestLogger::test_log_directory_creation_failure", "type": "TestCaseFunction", "lineno": 115}, {"nodeid": "tests/test_logger.py::TestLogger::test_logging_to_file", "type": "TestCaseFunction", "lineno": 99}, {"nodeid": "tests/test_logger.py::TestLogger::test_successful_initialization", "type": "TestCaseFunction", "lineno": 69}]}, {"nodeid": "tests/test_logger.py", "outcome": "passed", "result": [{"nodeid": "tests/test_logger.py::TestLogger", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_main.py::TestMainModule", "outcome": "passed", "result": [{"nodeid": "tests/test_main.py::TestMainModule::test_run_bot_asset_processing_error_continues", "type": "TestCaseFunction", "lineno": 66}, {"nodeid": "tests/test_main.py::TestMainModule::test_run_bot_client_initialization_failure", "type": "TestCaseFunction", "lineno": 47}, {"nodeid": "tests/test_main.py::TestMainModule::test_run_bot_success", "type": "TestCaseFunction", "lineno": 14}]}, {"nodeid": "tests/test_main.py", "outcome": "passed", "result": [{"nodeid": "tests/test_main.py::TestMainModule", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator", "outcome": "passed", "result": [{"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_determine_sell_orders_happy_path", "type": "TestCaseFunction", "lineno": 50}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_input_validation_assertions", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_last_tier_sells_remaining_quantity", "type": "TestCaseFunction", "lineno": 63}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_returns_empty_if_all_tiers_below_min_size", "type": "TestCaseFunction", "lineno": 97}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_round_decimal_down", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_round_decimal_no_change", "type": "TestCaseFunction", "lineno": 36}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_round_decimal_with_assertion_error", "type": "TestCaseFunction", "lineno": 43}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_skips_tier_if_quantity_below_min_size", "type": "TestCaseFunction", "lineno": 81}]}, {"nodeid": "tests/test_order_calculator.py", "outcome": "passed", "result": [{"nodeid": "tests/test_order_calculator.py::TestOrderCalculator", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_persistence.py::TestPersistence", "outcome": "passed", "result": [{"nodeid": "tests/test_persistence.py::TestPersistence::test_add_sell_order_creates_list_if_not_exists", "type": "TestCaseFunction", "lineno": 390}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_add_sell_order_duplicate_not_added", "type": "TestCaseFunction", "lineno": 432}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_add_sell_order_no_filled_trade", "type": "TestCaseFunction", "lineno": 420}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_add_sell_order_to_filled_trade_success", "type": "TestCaseFunction", "lineno": 356}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_clear_filled_buy_trade_exists", "type": "TestCaseFunction", "lineno": 320}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_clear_filled_buy_trade_not_exists", "type": "TestCaseFunction", "lineno": 339}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_clear_open_buy_order_exists", "type": "TestCaseFunction", "lineno": 220}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_clear_open_buy_order_not_exists", "type": "TestCaseFunction", "lineno": 239}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_filled_buy_trade_corrupted_data", "type": "TestCaseFunction", "lineno": 302}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_filled_buy_trade_not_found", "type": "TestCaseFunction", "lineno": 289}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_filled_buy_trade_success", "type": "TestCaseFunction", "lineno": 277}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_open_buy_order_corrupted_data", "type": "TestCaseFunction", "lineno": 204}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_open_buy_order_not_found", "type": "TestCaseFunction", "lineno": 189}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_open_buy_order_success", "type": "TestCaseFunction", "lineno": 177}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_trade_state_corrupted_data_not_dict", "type": "TestCaseFunction", "lineno": 132}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_trade_state_file_not_found", "type": "TestCaseFunction", "lineno": 96}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_trade_state_json_decode_error", "type": "TestCaseFunction", "lineno": 110}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_trade_state_success", "type": "TestCaseFunction", "lineno": 72}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_save_filled_buy_trade", "type": "TestCaseFunction", "lineno": 256}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_save_open_buy_order", "type": "TestCaseFunction", "lineno": 157}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_save_trade_state_creates_dir", "type": "TestCaseFunction", "lineno": 51}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_save_trade_state_success", "type": "TestCaseFunction", "lineno": 30}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_update_sell_order_status_no_filled_trade", "type": "TestCaseFunction", "lineno": 502}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_update_sell_order_status_no_sell_orders_list", "type": "TestCaseFunction", "lineno": 514}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_update_sell_order_status_order_not_found", "type": "TestCaseFunction", "lineno": 531}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_update_sell_order_status_success", "type": "TestCaseFunction", "lineno": 464}]}, {"nodeid": "tests/test_persistence.py", "outcome": "passed", "result": [{"nodeid": "tests/test_persistence.py::TestPersistence", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer", "outcome": "passed", "result": [{"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_handles_non_numeric_rsi_values", "type": "TestCaseFunction", "lineno": 80}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_input_validation_raises_assertion_error", "type": "TestCaseFunction", "lineno": 61}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_false_on_rsi_equals_threshold", "type": "TestCaseFunction", "lineno": 50}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_false_when_rsi_above_threshold", "type": "TestCaseFunction", "lineno": 36}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_false_when_rsi_below_threshold", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_false_when_rsi_crosses_down", "type": "TestCaseFunction", "lineno": 43}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_true_when_rsi_crosses_up", "type": "TestCaseFunction", "lineno": 21}]}, {"nodeid": "tests/test_signal_analyzer.py", "outcome": "passed", "result": [{"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis", "outcome": "passed", "result": [{"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_all_nan_close", "type": "TestCaseFunction", "lineno": 151}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_contains_some_nan_close", "type": "TestCaseFunction", "lineno": 162}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_empty_dataframe", "type": "TestCaseFunction", "lineno": 97}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_exact_data_points_for_period", "type": "TestCaseFunction", "lineno": 215}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_generic_exception", "type": "TestCaseFunction", "lineno": 254}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_insufficient_data", "type": "TestCaseFunction", "lineno": 106}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_missing_close_column", "type": "TestCaseFunction", "lineno": 131}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_non_numeric_close_column", "type": "TestCaseFunction", "lineno": 140}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_valid_data", "type": "TestCaseFunction", "lineno": 40}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_all_nan_close", "type": "TestCaseFunction", "lineno": 354}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_contains_some_nan_close", "type": "TestCaseFunction", "lineno": 368}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_empty_dataframe", "type": "TestCaseFunction", "lineno": 308}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_exact_data_points_for_period", "type": "TestCaseFunction", "lineno": 392}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_generic_exception", "type": "TestCaseFunction", "lineno": 436}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_insufficient_data", "type": "TestCaseFunction", "lineno": 319}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_missing_close_column", "type": "TestCaseFunction", "lineno": 332}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_non_numeric_close_column", "type": "TestCaseFunction", "lineno": 343}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_valid_data", "type": "TestCaseFunction", "lineno": 281}]}, {"nodeid": "tests/test_technical_analysis.py", "outcome": "passed", "result": [{"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager", "outcome": "passed", "result": [{"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_filled_buy_order_checks_existing_sell_orders", "type": "TestCaseFunction", "lineno": 222}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_filled_buy_order_places_new_sell_orders", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_new_buy_order_does_not_place_order_on_no_signal", "type": "TestCaseFunction", "lineno": 115}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_new_buy_order_places_order_on_signal", "type": "TestCaseFunction", "lineno": 69}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_open_buy_order_is_filled", "type": "TestCaseFunction", "lineno": 131}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_open_buy_order_is_still_open", "type": "TestCaseFunction", "lineno": 162}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_process_cycle_handles_no_config", "type": "TestCaseFunction", "lineno": 56}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_process_cycle_handles_no_product_details", "type": "TestCaseFunction", "lineno": 61}]}, {"nodeid": "tests/test_trade_manager.py", "outcome": "passed", "result": [{"nodeid": "tests/test_trade_manager.py::TestTradeManager", "type": "UnitTestCase"}]}, {"nodeid": "tests/__init__.py", "outcome": "passed", "result": [{"nodeid": "tests/test_coinbase_client.py", "type": "Module"}, {"nodeid": "tests/test_config.py", "type": "Module"}, {"nodeid": "tests/test_connection.py", "type": "Module"}, {"nodeid": "tests/test_logger.py", "type": "Module"}, {"nodeid": "tests/test_main.py", "type": "Module"}, {"nodeid": "tests/test_order_calculator.py", "type": "Module"}, {"nodeid": "tests/test_persistence.py", "type": "Module"}, {"nodeid": "tests/test_signal_analyzer.py", "type": "Module"}, {"nodeid": "tests/test_technical_analysis.py", "type": "Module"}, {"nodeid": "tests/test_trade_manager.py", "type": "Module"}]}, {"nodeid": "trading/__init__.py", "outcome": "passed", "result": []}], "tests": [{"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_empty_order_ids", "lineno": 540, "outcome": "passed", "keywords": ["test_cancel_orders_empty_order_ids", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.0002924779983004555, "outcome": "passed"}, "call": {"duration": 0.000970338995102793, "outcome": "passed"}, "teardown": {"duration": 7.582800753880292e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_error_handling", "lineno": 577, "outcome": "passed", "keywords": ["test_cancel_orders_error_handling", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.012898954097182e-05, "outcome": "passed"}, "call": {"duration": 0.0008664149936521426, "outcome": "passed"}, "teardown": {"duration": 7.419601024594158e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_failure_unknown_reason", "lineno": 690, "outcome": "passed", "keywords": ["test_cancel_orders_failure_unknown_reason", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.487599552609026e-05, "outcome": "passed"}, "call": {"duration": 0.0012395880039548501, "outcome": "passed"}, "teardown": {"duration": 7.196899969130754e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_failure_with_error_response", "lineno": 656, "outcome": "passed", "keywords": ["test_cancel_orders_failure_with_error_response", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.999899389687926e-05, "outcome": "passed"}, "call": {"duration": 0.0007955640030559152, "outcome": "passed"}, "teardown": {"duration": 7.066800026223063e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_failure_with_failure_reason", "lineno": 673, "outcome": "passed", "keywords": ["test_cancel_orders_failure_with_failure_reason", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.918299525044858e-05, "outcome": "passed"}, "call": {"duration": 0.0007776879938319325, "outcome": "passed"}, "teardown": {"duration": 7.441600610036403e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_malformed_response_no_results_key", "lineno": 620, "outcome": "passed", "keywords": ["test_cancel_orders_malformed_response_no_results_key", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.767099305056036e-05, "outcome": "passed"}, "call": {"duration": 0.0007715199899394065, "outcome": "passed"}, "teardown": {"duration": 7.00899981893599e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_malformed_response_not_dict", "lineno": 609, "outcome": "passed", "keywords": ["test_cancel_orders_malformed_response_not_dict", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.801900210324675e-05, "outcome": "passed"}, "call": {"duration": 0.0009722090035211295, "outcome": "passed"}, "teardown": {"duration": 7.473700679838657e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_malformed_response_results_item_not_dict", "lineno": 699, "outcome": "passed", "keywords": ["test_cancel_orders_malformed_response_results_item_not_dict", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.989798905327916e-05, "outcome": "passed"}, "call": {"duration": 0.0013281220017233863, "outcome": "passed"}, "teardown": {"duration": 7.016300514806062e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_malformed_response_results_not_list", "lineno": 631, "outcome": "passed", "keywords": ["test_cancel_orders_malformed_response_results_not_list", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.840400212444365e-05, "outcome": "passed"}, "call": {"duration": 0.0007396919972961769, "outcome": "passed"}, "teardown": {"duration": 8.333599544130266e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_no_client", "lineno": 529, "outcome": "passed", "keywords": ["test_cancel_orders_no_client", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.552700455766171e-05, "outcome": "passed"}, "call": {"duration": 0.0006639190105488524, "outcome": "passed"}, "teardown": {"duration": 7.030100096017122e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_cancel_orders_success", "lineno": 550, "outcome": "passed", "keywords": ["test_cancel_orders_success", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.672699575778097e-05, "outcome": "passed"}, "call": {"duration": 0.0006744700076524168, "outcome": "passed"}, "teardown": {"duration": 6.865098839625716e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_generate_client_order_id", "lineno": 142, "outcome": "passed", "keywords": ["test_generate_client_order_id", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.730400830041617e-05, "outcome": "passed"}, "call": {"duration": 0.000638929006527178, "outcome": "passed"}, "teardown": {"duration": 7.056699541863054e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_generate_client_order_id_single_char_id", "lineno": 148, "outcome": "passed", "keywords": ["test_generate_client_order_id_single_char_id", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.727599586360157e-05, "outcome": "passed"}, "call": {"duration": 0.0006225850083865225, "outcome": "passed"}, "teardown": {"duration": 7.018100586719811e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_error_handling", "lineno": 209, "outcome": "passed", "keywords": ["test_get_accounts_error_handling", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.665398879908025e-05, "outcome": "passed"}, "call": {"duration": 0.0009028619970194995, "outcome": "passed"}, "teardown": {"duration": 6.976000440772623e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_invalid_json_response", "lineno": 255, "outcome": "passed", "keywords": ["test_get_accounts_invalid_json_response", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.198900079354644e-05, "outcome": "passed"}, "call": {"duration": 0.0012850110069848597, "outcome": "passed"}, "teardown": {"duration": 7.110800652299076e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_malformed_response_accounts_not_list", "lineno": 243, "outcome": "passed", "keywords": ["test_get_accounts_malformed_response_accounts_not_list", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.847801316529512e-05, "outcome": "passed"}, "call": {"duration": 0.0007891109999036416, "outcome": "passed"}, "teardown": {"duration": 6.939299055375159e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_malformed_response_no_accounts_key", "lineno": 233, "outcome": "passed", "keywords": ["test_get_accounts_malformed_response_no_accounts_key", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.717599510215223e-05, "outcome": "passed"}, "call": {"duration": 0.0007134379993658513, "outcome": "passed"}, "teardown": {"duration": 6.874300015624613e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_malformed_response_not_dict", "lineno": 223, "outcome": "passed", "keywords": ["test_get_accounts_malformed_response_not_dict", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.566300337202847e-05, "outcome": "passed"}, "call": {"duration": 0.0007615100039402023, "outcome": "passed"}, "teardown": {"duration": 6.951199611648917e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_no_client", "lineno": 181, "outcome": "passed", "keywords": ["test_get_accounts_no_client", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.67820019973442e-05, "outcome": "passed"}, "call": {"duration": 0.0007770560041535646, "outcome": "passed"}, "teardown": {"duration": 7.635100337211043e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_accounts_success", "lineno": 193, "outcome": "passed", "keywords": ["test_get_accounts_success", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.202499884646386e-05, "outcome": "passed"}, "call": {"duration": 0.0007190759934019297, "outcome": "passed"}, "teardown": {"duration": 7.459000335074961e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_order_malformed_response_no_order_key", "lineno": 505, "outcome": "passed", "keywords": ["test_get_order_malformed_response_no_order_key", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.77990062488243e-05, "outcome": "passed"}, "call": {"duration": 0.001387954005622305, "outcome": "passed"}, "teardown": {"duration": 7.245500455610454e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_order_malformed_response_order_not_dict", "lineno": 516, "outcome": "passed", "keywords": ["test_get_order_malformed_response_order_not_dict", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.970600563567132e-05, "outcome": "passed"}, "call": {"duration": 0.0007832990086171776, "outcome": "passed"}, "teardown": {"duration": 6.838500848971307e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_empty_product_id", "lineno": 285, "outcome": "passed", "keywords": ["test_get_product_candles_empty_product_id", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.791799725964665e-05, "outcome": "passed"}, "call": {"duration": 0.0006554849969688803, "outcome": "passed"}, "teardown": {"duration": 6.953999400138855e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_error_handling", "lineno": 314, "outcome": "passed", "keywords": ["test_get_product_candles_error_handling", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.876300125848502e-05, "outcome": "passed"}, "call": {"duration": 0.0008497759990859777, "outcome": "passed"}, "teardown": {"duration": 7.011699199210852e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_malformed_response_candles_not_list", "lineno": 328, "outcome": "passed", "keywords": ["test_get_product_candles_malformed_response_candles_not_list", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00011608000204432756, "outcome": "passed"}, "call": {"duration": 0.000725263002095744, "outcome": "passed"}, "teardown": {"duration": 6.94210029905662e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_no_client", "lineno": 271, "outcome": "passed", "keywords": ["test_get_product_candles_no_client", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.782700413372368e-05, "outcome": "passed"}, "call": {"duration": 0.0006990830006543547, "outcome": "passed"}, "teardown": {"duration": 7.085999823175371e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_candles_success", "lineno": 295, "outcome": "passed", "keywords": ["test_get_product_candles_success", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.814698619768023e-05, "outcome": "passed"}, "call": {"duration": 0.000695206006639637, "outcome": "passed"}, "teardown": {"duration": 8.41979926917702e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_error_handling", "lineno": 366, "outcome": "failed", "keywords": ["test_get_product_error_handling", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.322601206600666e-05, "outcome": "passed"}, "call": {"duration": 10.018321226001717, "outcome": "failed", "crash": {"path": "/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/tests/test_coinbase_client.py", "lineno": 64, "message": "AssertionError: expected call not found.\nExpected: error('Assertion failed in get_product for BTC-USD: Test HTTP Error', exc_info=True)\n  Actual: error('Failed to fetch product details for BTC-USD after 3 attempts.', exc_info=True)\n\npytest introspection follows:\n\nArgs:\nassert ('Failed to f...3 attempts.',) == ('Assertion f... HTTP Error',)\n  At index 0 diff: 'Failed to fetch product details for BTC-USD after 3 attempts.' != 'Assertion failed in get_product for BTC-USD: Test HTTP Error'\n  Use -v to get more diff"}, "traceback": [{"path": "tests/test_coinbase_client.py", "lineno": 372, "message": ""}, {"path": "tests/test_coinbase_client.py", "lineno": 64, "message": "AssertionError"}], "longrepr": "self = <MagicMock name='logger.get_logger().error' id='140005042288496'>\nargs = ('Assertion failed in get_product for BTC-USD: Test HTTP Error',)\nkwargs = {'exc_info': True}\nexpected = call('Assertion failed in get_product for BTC-USD: Test HTTP Error', exc_info=True)\nactual = call('Failed to fetch product details for BTC-USD after 3 attempts.', exc_info=True)\n_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f5576f99da0>\ncause = None\n\n    def assert_called_with(self, /, *args, **kwargs):\n        \"\"\"assert that the last call was made with the specified arguments.\n    \n        Raises an AssertionError if the args and keyword args passed in are\n        different to the last call to the mock.\"\"\"\n        if self.call_args is None:\n            expected = self._format_mock_call_signature(args, kwargs)\n            actual = 'not called.'\n            error_message = ('expected call not found.\\nExpected: %s\\n  Actual: %s'\n                    % (expected, actual))\n            raise AssertionError(error_message)\n    \n        def _error_message():\n            msg = self._format_mock_failure_message(args, kwargs)\n            return msg\n        expected = self._call_matcher(_Call((args, kwargs), two=True))\n        actual = self._call_matcher(self.call_args)\n        if actual != expected:\n            cause = expected if isinstance(expected, Exception) else None\n>           raise AssertionError(_error_message()) from cause\nE           AssertionError: expected call not found.\nE           Expected: error('Assertion failed in get_product for BTC-USD: Test HTTP Error', exc_info=True)\nE             Actual: error('Failed to fetch product details for BTC-USD after 3 attempts.', exc_info=True)\n\n/usr/lib/python3.12/unittest/mock.py:944: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_coinbase_client.TestCoinbaseClient testMethod=test_get_product_error_handling>\n\n    def test_get_product_error_handling(self):\n        \"\"\"Test all error handling for get_product.\"\"\"\n        self.mock_logger_instance.reset_mock()\n        api_args = {\"product_id\": \"BTC-USD\"}\n        log_message = f\"Assertion failed in get_product for BTC-USD: {self.mock_http_error}\"\n>       self._test_api_call_http_error(\n            \"get_product\", \"get_product\", api_args, log_message\n        )\n\ntests/test_coinbase_client.py:372: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tests.test_coinbase_client.TestCoinbaseClient testMethod=test_get_product_error_handling>\nmethod_name = 'get_product', rest_method_name = 'get_product'\napi_args = {'product_id': 'BTC-USD'}\nlog_message = 'Assertion failed in get_product for BTC-USD: Test HTTP Error'\n\n    def _test_api_call_http_error(\n        self, method_name, rest_method_name, api_args, log_message\n    ):\n        \"\"\"Helper to test HTTPError handling for a given client method.\"\"\"\n        getattr(self.mock_rest_client_instance, rest_method_name).side_effect = (\n            self.mock_http_error\n        )\n        result = getattr(self.client, method_name)(**api_args)\n        self.assertIsNone(result)\n>       self.mock_logger_instance.error.assert_called_with(log_message, exc_info=True)\nE       AssertionError: expected call not found.\nE       Expected: error('Assertion failed in get_product for BTC-USD: Test HTTP Error', exc_info=True)\nE         Actual: error('Failed to fetch product details for BTC-USD after 3 attempts.', exc_info=True)\nE       \nE       pytest introspection follows:\nE       \nE       Args:\nE       assert ('Failed to f...3 attempts.',) == ('Assertion f... HTTP Error',)\nE         At index 0 diff: 'Failed to fetch product details for BTC-USD after 3 attempts.' != 'Assertion failed in get_product for BTC-USD: Test HTTP Error'\nE         Use -v to get more diff\n\ntests/test_coinbase_client.py:64: AssertionError"}, "teardown": {"duration": 0.00015021800936665386, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_error_handling_retry", "lineno": 381, "outcome": "failed", "keywords": ["test_get_product_error_handling_retry", "__wrapped__", "patchings", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00012163500650785863, "outcome": "passed"}, "call": {"duration": 0.0009771960030775517, "outcome": "failed", "crash": {"path": "/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/tests/test_coinbase_client.py", "lineno": 385, "message": "AttributeError: 'TestCoinbaseClient' object has no attribute 'mock_rest_client'. Did you mean: 'mock_rest_client_class'?"}, "traceback": [{"path": "tests/test_coinbase_client.py", "lineno": 385, "message": "AttributeError"}], "longrepr": "self = <tests.test_coinbase_client.TestCoinbaseClient testMethod=test_get_product_error_handling_retry>\nmock_sleep = <MagicMock name='sleep' id='140005042547904'>\n\n    @patch(\"trading.coinbase_client.time.sleep\", return_value=None)\n    def test_get_product_error_handling_retry(self, mock_sleep):\n        \"\"\"Test error handling and retry logic in get_product.\"\"\"\n>       self.mock_rest_client.get_product.side_effect = HTTPError(\"API Error\")\nE       AttributeError: 'TestCoinbaseClient' object has no attribute 'mock_rest_client'. Did you mean: 'mock_rest_client_class'?\n\ntests/test_coinbase_client.py:385: AttributeError"}, "teardown": {"duration": 8.97069985512644e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_no_client", "lineno": 344, "outcome": "passed", "keywords": ["test_get_product_no_client", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00013670600310433656, "outcome": "passed"}, "call": {"duration": 0.0008467709994874895, "outcome": "passed"}, "teardown": {"duration": 5.934599903412163e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_get_product_success", "lineno": 356, "outcome": "passed", "keywords": ["test_get_product_success", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.88649990176782e-05, "outcome": "passed"}, "call": {"duration": 0.0009605310042388737, "outcome": "passed"}, "teardown": {"duration": 7.196000660769641e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_handle_api_response_with_to_dict_object", "lineno": 157, "outcome": "passed", "keywords": ["test_handle_api_response_with_to_dict_object", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.733098755124956e-05, "outcome": "passed"}, "call": {"duration": 0.0008662500040372834, "outcome": "passed"}, "teardown": {"duration": 7.119899964891374e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_empty_api_key", "lineno": 123, "outcome": "passed", "keywords": ["test_initialization_empty_api_key", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.641700307838619e-05, "outcome": "passed"}, "call": {"duration": 0.000582958004088141, "outcome": "passed"}, "teardown": {"duration": 6.961300096008927e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_empty_api_secret", "lineno": 136, "outcome": "passed", "keywords": ["test_initialization_empty_api_secret", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.152200073003769e-05, "outcome": "passed"}, "call": {"duration": 0.0010067770053865388, "outcome": "passed"}, "teardown": {"duration": 7.038300100248307e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_failure", "lineno": 105, "outcome": "passed", "keywords": ["test_initialization_failure", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.728600758127868e-05, "outcome": "passed"}, "call": {"duration": 0.0007115780026651919, "outcome": "passed"}, "teardown": {"duration": 6.876898987684399e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_no_api_key", "lineno": 116, "outcome": "passed", "keywords": ["test_initialization_no_api_key", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.608500891365111e-05, "outcome": "passed"}, "call": {"duration": 0.0005160389991942793, "outcome": "passed"}, "teardown": {"duration": 6.896199192851782e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_no_api_secret", "lineno": 129, "outcome": "passed", "keywords": ["test_initialization_no_api_secret", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.598400407005101e-05, "outcome": "passed"}, "call": {"duration": 0.000548039999557659, "outcome": "passed"}, "teardown": {"duration": 8.08890035841614e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_success", "lineno": 78, "outcome": "passed", "keywords": ["test_initialization_success", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.72580096963793e-05, "outcome": "passed"}, "call": {"duration": 0.0005129950004629791, "outcome": "passed"}, "teardown": {"duration": 6.907200440764427e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_initialization_with_arguments", "lineno": 90, "outcome": "passed", "keywords": ["test_initialization_with_arguments", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.752400415483862e-05, "outcome": "passed"}, "call": {"duration": 0.0005655669956468046, "outcome": "passed"}, "teardown": {"duration": 6.949400994926691e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_empty_product_id", "lineno": 419, "outcome": "passed", "keywords": ["test_limit_order_empty_product_id", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.626799924764782e-05, "outcome": "passed"}, "call": {"duration": 0.0008916700026020408, "outcome": "passed"}, "teardown": {"duration": 7.065800309646875e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_failure", "lineno": 451, "outcome": "passed", "keywords": ["test_limit_order_failure", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.922899385448545e-05, "outcome": "passed"}, "call": {"duration": 0.0010031200072262436, "outcome": "passed"}, "teardown": {"duration": 7.141000241972506e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_failure_unknown_error", "lineno": 482, "outcome": "passed", "keywords": ["test_limit_order_failure_unknown_error", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.236499317921698e-05, "outcome": "passed"}, "call": {"duration": 0.0013398559967754409, "outcome": "passed"}, "teardown": {"duration": 7.08230072632432e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_failure_with_error_response", "lineno": 467, "outcome": "passed", "keywords": ["test_limit_order_failure_with_error_response", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.860599725972861e-05, "outcome": "passed"}, "call": {"duration": 0.0008174909889930859, "outcome": "passed"}, "teardown": {"duration": 7.073199958540499e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_invalid_side", "lineno": 408, "outcome": "passed", "keywords": ["test_limit_order_invalid_side", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.644300058018416e-05, "outcome": "passed"}, "call": {"duration": 0.0007681090064579621, "outcome": "passed"}, "teardown": {"duration": 7.901800563558936e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_malformed_response_not_dict", "lineno": 644, "outcome": "passed", "keywords": ["test_limit_order_malformed_response_not_dict", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00011498000822030008, "outcome": "passed"}, "call": {"duration": 0.0008759110060054809, "outcome": "passed"}, "teardown": {"duration": 7.065798854455352e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_no_client", "lineno": 394, "outcome": "passed", "keywords": ["test_limit_order_no_client", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.854199793655425e-05, "outcome": "passed"}, "call": {"duration": 0.0007079200004227459, "outcome": "passed"}, "teardown": {"duration": 7.041099888738245e-05, "outcome": "passed"}}, {"nodeid": "tests/test_coinbase_client.py::TestCoinbaseClient::test_limit_order_success", "lineno": 430, "outcome": "passed", "keywords": ["test_limit_order_success", "TestCoinbaseClient", "test_coinbase_client.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.891000470612198e-05, "outcome": "passed"}, "call": {"duration": 0.0008783310040598735, "outcome": "passed"}, "teardown": {"duration": 0.0003179890045430511, "outcome": "passed"}}, {"nodeid": "tests/test_config.py::TestConfig::test_api_key_empty", "lineno": 81, "outcome": "passed", "keywords": ["test_api_key_empty", "__wrapped__", "patchings", "TestConfig", "test_config.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00014351600839290768, "outcome": "passed"}, "call": {"duration": 0.0007329910004045814, "outcome": "passed"}, "teardown": {"duration": 6.942999607417732e-05, "outcome": "passed"}}, {"nodeid": "tests/test_config.py::TestConfig::test_api_key_missing", "lineno": 68, "outcome": "passed", "keywords": ["test_api_key_missing", "__wrapped__", "patchings", "TestConfig", "test_config.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.845000072848052e-05, "outcome": "passed"}, "call": {"duration": 0.0005257749871816486, "outcome": "passed"}, "teardown": {"duration": 7.056699541863054e-05, "outcome": "passed"}}, {"nodeid": "tests/test_config.py::TestConfig::test_api_keys_loaded_successfully", "lineno": 50, "outcome": "passed", "keywords": ["test_api_keys_loaded_successfully", "__wrapped__", "TestConfig", "test_config.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.63790012570098e-05, "outcome": "passed"}, "call": {"duration": 0.0007700900023337454, "outcome": "passed"}, "teardown": {"duration": 8.130999049171805e-05, "outcome": "passed"}}, {"nodeid": "tests/test_config.py::TestConfig::test_api_secret_empty", "lineno": 106, "outcome": "passed", "keywords": ["test_api_secret_empty", "__wrapped__", "patchings", "TestConfig", "test_config.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00010061499779112637, "outcome": "passed"}, "call": {"duration": 0.0015406049933517352, "outcome": "passed"}, "teardown": {"duration": 9.059600415639579e-05, "outcome": "passed"}}, {"nodeid": "tests/test_config.py::TestConfig::test_api_secret_missing", "lineno": 94, "outcome": "passed", "keywords": ["test_api_secret_missing", "__wrapped__", "patchings", "TestConfig", "test_config.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.992800187319517e-05, "outcome": "passed"}, "call": {"duration": 0.0005165799957467243, "outcome": "passed"}, "teardown": {"duration": 7.310599903576076e-05, "outcome": "passed"}}, {"nodeid": "tests/test_config.py::TestConfig::test_candle_granularity_seconds", "lineno": 155, "outcome": "passed", "keywords": ["test_candle_granularity_seconds", "__wrapped__", "TestConfig", "test_config.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00017489500169176608, "outcome": "passed"}, "call": {"duration": 0.0010422530031064525, "outcome": "passed"}, "teardown": {"duration": 7.051200373098254e-05, "outcome": "passed"}}, {"nodeid": "tests/test_config.py::TestConfig::test_config_module_main_block_runs", "lineno": 167, "outcome": "passed", "keywords": ["test_config_module_main_block_runs", "__wrapped__", "TestConfig", "test_config.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.862600952852517e-05, "outcome": "passed"}, "call": {"duration": 0.0005713790014851838, "outcome": "passed"}, "teardown": {"duration": 7.007099338807166e-05, "outcome": "passed"}}, {"nodeid": "tests/test_config.py::TestConfig::test_default_general_settings", "lineno": 119, "outcome": "passed", "keywords": ["test_default_general_settings", "__wrapped__", "TestConfig", "test_config.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.65540059749037e-05, "outcome": "passed"}, "call": {"duration": 0.0005863210099050775, "outcome": "passed"}, "teardown": {"duration": 6.990699330344796e-05, "outcome": "passed"}}, {"nodeid": "tests/test_config.py::TestConfig::test_trading_pairs_structure_and_defaults", "lineno": 132, "outcome": "passed", "keywords": ["test_trading_pairs_structure_and_defaults", "__wrapped__", "TestConfig", "test_config.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.763400208204985e-05, "outcome": "passed"}, "call": {"duration": 0.000623649000772275, "outcome": "passed"}, "teardown": {"duration": 0.00011254199489485472, "outcome": "passed"}}, {"nodeid": "tests/test_connection.py::test_api_connection", "lineno": 13, "outcome": "passed", "keywords": ["test_api_connection", "test_connection.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.309799886774272e-05, "outcome": "passed"}, "call": {"duration": 0.2133859140012646, "outcome": "passed", "stdout": "--- Attempting to connect to Coinbase API ---\nAPI keys loaded from .env file.\nRESTClient initialized successfully.\nFetching accounts...\n\n--- SUCCESS: Connection to Coinbase API is working! ---\nAPI Response:\n{\n  \"accounts\": [\n    {\n      \"uuid\": \"ccaf3c43-c241-5eb4-af15-4732fd18488b\",\n      \"name\": \"BSV Wallet\",\n      \"currency\": \"BSV\",\n      \"available_balance\": {\n        \"value\": \"0\",\n        \"currency\": \"BSV\"\n      },\n      \"default\": true,\n      \"active\": true,\n      \"created_at\": \"2023-07-21T21:34:15.927Z\",\n      \"updated_at\": \"2023-07-21T21:34:15.956732Z\",\n      \"deleted_at\": null,\n      \"type\": \"ACCOUNT_TYPE_CRYPTO\",\n      \"ready\": false,\n      \"hold\": {\n        \"value\": \"0\",\n        \"currency\": \"BSV\"\n      },\n      \"retail_portfolio_id\": \"3165705c-cf80-555f-ad91-5045a4160ffa\",\n      \"platform\": \"ACCOUNT_PLATFORM_CONSUMER\"\n    },\n    {\n      \"uuid\": \"07e8c446-fef0-52e8-8839-e205405b7f05\",\n      \"name\": \"BCH Wallet\",\n      \"currency\": \"BCH\",\n      \"available_balance\": {\n        \"value\": \"0\",\n        \"currency\": \"BCH\"\n      },\n      \"default\": true,\n      \"active\": true,\n      \"created_at\": \"2023-07-21T21:34:15.759Z\",\n      \"updated_at\": \"2023-07-21T21:34:15.823907Z\",\n      \"deleted_at\": null,\n      \"type\": \"ACCOUNT_TYPE_CRYPTO\",\n      \"ready\": true,\n      \"hold\": {\n        \"value\": \"0\",\n        \"currency\": \"BCH\"\n      },\n      \"retail_portfolio_id\": \"3165705c-cf80-555f-ad91-5045a4160ffa\",\n      \"platform\": \"ACCOUNT_PLATFORM_CONSUMER\"\n    },\n    {\n      \"uuid\": \"94c5f7b8-49a9-532f-838d-1e61e145f2f9\",\n      \"name\": \"ETH2 Wallet\",\n      \"currency\": \"ETH2\",\n      \"available_balance\": {\n        \"value\": \"0\",\n        \"currency\": \"ETH2\"\n      },\n      \"default\": true,\n      \"active\": true,\n      \"created_at\": \"2023-07-20T03:27:41.737Z\",\n      \"updated_at\": \"2023-07-20T03:27:41.839080Z\",\n      \"deleted_at\": null,\n      \"type\": \"ACCOUNT_TYPE_CRYPTO\",\n      \"ready\": false,\n      \"hold\": {\n        \"value\": \"0\",\n        \"currency\": \"ETH2\"\n      },\n      \"retail_portfolio_id\": \"3165705c-cf80-555f-ad91-5045a4160ffa\",\n      \"platform\": \"ACCOUNT_PLATFORM_CONSUMER\"\n    },\n    {\n      \"uuid\": \"02aa2921-73ea-58d5-83f1-681d6cae2a70\",\n      \"name\": \"Cash (USD)\",\n      \"currency\": \"USD\",\n      \"available_balance\": {\n        \"value\": \"0\",\n        \"currency\": \"USD\"\n      },\n      \"default\": false,\n      \"active\": true,\n      \"created_at\": \"2022-02-14T00:43:23.408Z\",\n      \"updated_at\": \"2022-02-14T00:43:23.408Z\",\n      \"deleted_at\": null,\n      \"type\": \"ACCOUNT_TYPE_FIAT\",\n      \"ready\": true,\n      \"hold\": {\n        \"value\": \"0\",\n        \"currency\": \"USD\"\n      },\n      \"retail_portfolio_id\": \"3165705c-cf80-555f-ad91-5045a4160ffa\",\n      \"platform\": \"ACCOUNT_PLATFORM_CONSUMER\"\n    },\n    {\n      \"uuid\": \"791533fd-3e3f-5a48-b3b9-ed70f4a583c3\",\n      \"name\": \"BTC Wallet\",\n      \"currency\": \"BTC\",\n      \"available_balance\": {\n        \"value\": \"0.00000017\",\n        \"currency\": \"BTC\"\n      },\n      \"default\": true,\n      \"active\": true,\n      \"created_at\": \"2022-02-14T00:41:19.356Z\",\n      \"updated_at\": \"2023-07-21T21:34:15.616Z\",\n      \"deleted_at\": null,\n      \"type\": \"ACCOUNT_TYPE_CRYPTO\",\n      \"ready\": true,\n      \"hold\": {\n        \"value\": \"0\",\n        \"currency\": \"BTC\"\n      },\n      \"retail_portfolio_id\": \"3165705c-cf80-555f-ad91-5045a4160ffa\",\n      \"platform\": \"ACCOUNT_PLATFORM_CONSUMER\"\n    }\n  ],\n  \"has_next\": false,\n  \"cursor\": \"\",\n  \"size\": 5\n}\n"}, "teardown": {"duration": 0.00014042799011804163, "outcome": "passed"}}, {"nodeid": "tests/test_logger.py::TestLogger::test_file_handler_creation_io_error", "lineno": 132, "outcome": "passed", "keywords": ["test_file_handler_creation_io_error", "TestLogger", "test_logger.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00018564698984846473, "outcome": "passed"}, "call": {"duration": 0.0011268910020589828, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - ERROR - logger.setup_logging:98 - Could not open log file '/tmp/tmpnu64viwe/logs/test_app.log': Permission denied. File logging will be disabled.\n2025-06-26 16:08:11 - CryptoBotV6 - INFO - logger.setup_logging:103 - Logger initialized with level DEBUG. Logging to console and '/tmp/tmpnu64viwe/logs/test_app.log'.\n"}, "teardown": {"duration": 6.999800098128617e-05, "outcome": "passed"}}, {"nodeid": "tests/test_logger.py::TestLogger::test_log_directory_creation_failure", "lineno": 115, "outcome": "passed", "keywords": ["test_log_directory_creation_failure", "TestLogger", "test_logger.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.844099309295416e-05, "outcome": "passed"}, "call": {"duration": 0.0005941319977864623, "outcome": "passed"}, "teardown": {"duration": 6.873300299048424e-05, "outcome": "passed"}}, {"nodeid": "tests/test_logger.py::TestLogger::test_logging_to_file", "lineno": 99, "outcome": "passed", "keywords": ["test_logging_to_file", "TestLogger", "test_logger.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.775300764478743e-05, "outcome": "passed"}, "call": {"duration": 0.0007370620005531237, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - INFO - logger.setup_logging:103 - Logger initialized with level DEBUG. Logging to console and '/tmp/tmps_blpso5/logs/test_app.log'.\n2025-06-26 16:08:11 - CryptoBotV6 - INFO - test_logger.test_logging_to_file:109 - This is a test message for file logging.\n"}, "teardown": {"duration": 7.488401024602354e-05, "outcome": "passed"}}, {"nodeid": "tests/test_logger.py::TestLogger::test_successful_initialization", "lineno": 69, "outcome": "passed", "keywords": ["test_successful_initialization", "TestLogger", "test_logger.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.02650029072538e-05, "outcome": "passed"}, "call": {"duration": 0.0007568889996036887, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - INFO - logger.setup_logging:103 - Logger initialized with level DEBUG. Logging to console and '/tmp/tmp1sg89rfi/logs/test_app.log'.\n"}, "teardown": {"duration": 9.232900629285723e-05, "outcome": "passed"}}, {"nodeid": "tests/test_main.py::TestMainModule::test_run_bot_asset_processing_error_continues", "lineno": 66, "outcome": "failed", "keywords": ["test_run_bot_asset_processing_error_continues", "__wrapped__", "patchings", "TestMainModule", "test_main.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00012315700587350875, "outcome": "passed"}, "call": {"duration": 0.00039348700374830514, "outcome": "failed", "crash": {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1431, "message": "AttributeError: <module 'trading.main' from '/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/trading/main.py'> does not have the attribute 'TradeManager'"}, "traceback": [{"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1387, "message": "in patched"}, {"path": "/usr/lib/python3.12/contextlib.py", "lineno": 137, "message": "in __enter__"}, {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1369, "message": "in decoration_helper"}, {"path": "/usr/lib/python3.12/contextlib.py", "lineno": 526, "message": "in enter_context"}, {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1458, "message": "in __enter__"}, {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1431, "message": "AttributeError"}], "longrepr": "/usr/lib/python3.12/unittest/mock.py:1387: in patched\n    with self.decoration_helper(patched,\n/usr/lib/python3.12/contextlib.py:137: in __enter__\n    return next(self.gen)\n/usr/lib/python3.12/unittest/mock.py:1369: in decoration_helper\n    arg = exit_stack.enter_context(patching)\n/usr/lib/python3.12/contextlib.py:526: in enter_context\n    result = _enter(cm)\n/usr/lib/python3.12/unittest/mock.py:1458: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <unittest.mock._patch object at 0x7f55a1e6b920>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <module 'trading.main' from '/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/trading/main.py'> does not have the attribute 'TradeManager'\n\n/usr/lib/python3.12/unittest/mock.py:1431: AttributeError"}, "teardown": {"duration": 0.00013246100570540875, "outcome": "passed"}}, {"nodeid": "tests/test_main.py::TestMainModule::test_run_bot_client_initialization_failure", "lineno": 47, "outcome": "failed", "keywords": ["test_run_bot_client_initialization_failure", "__wrapped__", "patchings", "TestMainModule", "test_main.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00010358598956372589, "outcome": "passed"}, "call": {"duration": 0.0003353970096213743, "outcome": "failed", "crash": {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1431, "message": "AttributeError: <module 'trading.main' from '/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/trading/main.py'> does not have the attribute 'CoinbaseClient'"}, "traceback": [{"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1387, "message": "in patched"}, {"path": "/usr/lib/python3.12/contextlib.py", "lineno": 137, "message": "in __enter__"}, {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1369, "message": "in decoration_helper"}, {"path": "/usr/lib/python3.12/contextlib.py", "lineno": 526, "message": "in enter_context"}, {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1458, "message": "in __enter__"}, {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1431, "message": "AttributeError"}], "longrepr": "/usr/lib/python3.12/unittest/mock.py:1387: in patched\n    with self.decoration_helper(patched,\n/usr/lib/python3.12/contextlib.py:137: in __enter__\n    return next(self.gen)\n/usr/lib/python3.12/unittest/mock.py:1369: in decoration_helper\n    arg = exit_stack.enter_context(patching)\n/usr/lib/python3.12/contextlib.py:526: in enter_context\n    result = _enter(cm)\n/usr/lib/python3.12/unittest/mock.py:1458: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <unittest.mock._patch object at 0x7f55a1e6b680>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <module 'trading.main' from '/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/trading/main.py'> does not have the attribute 'CoinbaseClient'\n\n/usr/lib/python3.12/unittest/mock.py:1431: AttributeError"}, "teardown": {"duration": 0.00019461200281511992, "outcome": "passed"}}, {"nodeid": "tests/test_main.py::TestMainModule::test_run_bot_success", "lineno": 14, "outcome": "failed", "keywords": ["test_run_bot_success", "__wrapped__", "patchings", "TestMainModule", "test_main.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00015062099555507302, "outcome": "passed"}, "call": {"duration": 0.0005304860096657649, "outcome": "failed", "crash": {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1431, "message": "AttributeError: <module 'trading.main' from '/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/trading/main.py'> does not have the attribute 'TradeManager'"}, "traceback": [{"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1387, "message": "in patched"}, {"path": "/usr/lib/python3.12/contextlib.py", "lineno": 137, "message": "in __enter__"}, {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1369, "message": "in decoration_helper"}, {"path": "/usr/lib/python3.12/contextlib.py", "lineno": 526, "message": "in enter_context"}, {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1458, "message": "in __enter__"}, {"path": "/usr/lib/python3.12/unittest/mock.py", "lineno": 1431, "message": "AttributeError"}], "longrepr": "/usr/lib/python3.12/unittest/mock.py:1387: in patched\n    with self.decoration_helper(patched,\n/usr/lib/python3.12/contextlib.py:137: in __enter__\n    return next(self.gen)\n/usr/lib/python3.12/unittest/mock.py:1369: in decoration_helper\n    arg = exit_stack.enter_context(patching)\n/usr/lib/python3.12/contextlib.py:526: in enter_context\n    result = _enter(cm)\n/usr/lib/python3.12/unittest/mock.py:1458: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <unittest.mock._patch object at 0x7f55a1e6b170>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n>           raise AttributeError(\n                \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <module 'trading.main' from '/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/trading/main.py'> does not have the attribute 'TradeManager'\n\n/usr/lib/python3.12/unittest/mock.py:1431: AttributeError"}, "teardown": {"duration": 0.00016271100321318954, "outcome": "passed"}}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_determine_sell_orders_happy_path", "lineno": 50, "outcome": "passed", "keywords": ["test_determine_sell_orders_happy_path", "TestOrderCalculator", "test_order_calculator.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00014418498903978616, "outcome": "passed"}, "call": {"duration": 0.00034112599678337574, "outcome": "passed"}, "teardown": {"duration": 6.773399945814162e-05, "outcome": "passed"}}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_input_validation_assertions", "lineno": 108, "outcome": "passed", "keywords": ["test_input_validation_assertions", "TestOrderCalculator", "test_order_calculator.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.689199992455542e-05, "outcome": "passed"}, "call": {"duration": 0.00040880499000195414, "outcome": "passed"}, "teardown": {"duration": 0.00014309400285128504, "outcome": "passed"}}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_last_tier_sells_remaining_quantity", "lineno": 63, "outcome": "passed", "keywords": ["test_last_tier_sells_remaining_quantity", "TestOrderCalculator", "test_order_calculator.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.873500337358564e-05, "outcome": "passed"}, "call": {"duration": 0.00041654201049823314, "outcome": "passed"}, "teardown": {"duration": 7.09060113877058e-05, "outcome": "passed"}}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_returns_empty_if_all_tiers_below_min_size", "lineno": 97, "outcome": "passed", "keywords": ["test_returns_empty_if_all_tiers_below_min_size", "TestOrderCalculator", "test_order_calculator.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.93570070527494e-05, "outcome": "passed"}, "call": {"duration": 0.0003648589918157086, "outcome": "passed"}, "teardown": {"duration": 6.889799260534346e-05, "outcome": "passed"}}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_round_decimal_down", "lineno": 29, "outcome": "passed", "keywords": ["test_round_decimal_down", "TestOrderCalculator", "test_order_calculator.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.834000280126929e-05, "outcome": "passed"}, "call": {"duration": 0.00023295699793379754, "outcome": "passed"}, "teardown": {"duration": 6.766000296920538e-05, "outcome": "passed"}}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_round_decimal_no_change", "lineno": 36, "outcome": "passed", "keywords": ["test_round_decimal_no_change", "TestOrderCalculator", "test_order_calculator.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.254601223394275e-05, "outcome": "passed"}, "call": {"duration": 0.00023242599854711443, "outcome": "passed"}, "teardown": {"duration": 6.679899524897337e-05, "outcome": "passed"}}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_round_decimal_with_assertion_error", "lineno": 43, "outcome": "passed", "keywords": ["test_round_decimal_with_assertion_error", "TestOrderCalculator", "test_order_calculator.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.459000335074961e-05, "outcome": "passed"}, "call": {"duration": 0.00032286600617226213, "outcome": "passed"}, "teardown": {"duration": 6.946700159460306e-05, "outcome": "passed"}}, {"nodeid": "tests/test_order_calculator.py::TestOrderCalculator::test_skips_tier_if_quantity_below_min_size", "lineno": 81, "outcome": "passed", "keywords": ["test_skips_tier_if_quantity_below_min_size", "TestOrderCalculator", "test_order_calculator.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00020279800810385495, "outcome": "passed"}, "call": {"duration": 0.0006527990044560283, "outcome": "passed"}, "teardown": {"duration": 0.00010038699838332832, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_add_sell_order_creates_list_if_not_exists", "lineno": 390, "outcome": "passed", "keywords": ["test_add_sell_order_creates_list_if_not_exists", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.0001773330004652962, "outcome": "passed"}, "call": {"duration": 0.00036707699473481625, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - INFO - persistence.add_sell_order_to_filled_trade:346 - Added sell order sell101 to filled trade for XTZ-USD\n"}, "teardown": {"duration": 6.853099330328405e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_add_sell_order_duplicate_not_added", "lineno": 432, "outcome": "passed", "keywords": ["test_add_sell_order_duplicate_not_added", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.838600140530616e-05, "outcome": "passed"}, "call": {"duration": 0.0003343150019645691, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - WARNING - persistence.add_sell_order_to_filled_trade:338 - Sell order sellDuplicate already exists for GRT-USD. Not adding again.\n"}, "teardown": {"duration": 6.821900024078786e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_add_sell_order_no_filled_trade", "lineno": 420, "outcome": "passed", "keywords": ["test_add_sell_order_no_filled_trade", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.544300751760602e-05, "outcome": "passed"}, "call": {"duration": 0.00032701800228096545, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - ERROR - persistence.add_sell_order_to_filled_trade:325 - Cannot add sell order: No filled buy trade found for FIL-USD.\n"}, "teardown": {"duration": 6.862299051135778e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_add_sell_order_to_filled_trade_success", "lineno": 356, "outcome": "passed", "keywords": ["test_add_sell_order_to_filled_trade_success", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.59109971113503e-05, "outcome": "passed"}, "call": {"duration": 0.0003882989985868335, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - INFO - persistence.add_sell_order_to_filled_trade:346 - Added sell order sell789 to filled trade for ATOM-USD\n"}, "teardown": {"duration": 6.811901403125376e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_clear_filled_buy_trade_exists", "lineno": 320, "outcome": "passed", "keywords": ["test_clear_filled_buy_trade_exists", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.328100713901222e-05, "outcome": "passed"}, "call": {"duration": 0.000415186004829593, "outcome": "passed"}, "teardown": {"duration": 6.922800093889236e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_clear_filled_buy_trade_not_exists", "lineno": 339, "outcome": "passed", "keywords": ["test_clear_filled_buy_trade_not_exists", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.672599167563021e-05, "outcome": "passed"}, "call": {"duration": 0.0006354469951475039, "outcome": "passed"}, "teardown": {"duration": 6.865999603178352e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_clear_open_buy_order_exists", "lineno": 220, "outcome": "passed", "keywords": ["test_clear_open_buy_order_exists", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.309900633525103e-05, "outcome": "passed"}, "call": {"duration": 0.00025679099780973047, "outcome": "passed"}, "teardown": {"duration": 6.815599044784904e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_clear_open_buy_order_not_exists", "lineno": 239, "outcome": "passed", "keywords": ["test_clear_open_buy_order_not_exists", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.556199852842838e-05, "outcome": "passed"}, "call": {"duration": 0.00022521099890582263, "outcome": "passed"}, "teardown": {"duration": 7.105201075319201e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_filled_buy_trade_corrupted_data", "lineno": 302, "outcome": "passed", "keywords": ["test_load_filled_buy_trade_corrupted_data", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.334498852491379e-05, "outcome": "passed"}, "call": {"duration": 0.00018322700634598732, "outcome": "passed"}, "teardown": {"duration": 7.354500121437013e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_filled_buy_trade_not_found", "lineno": 289, "outcome": "passed", "keywords": ["test_load_filled_buy_trade_not_found", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00019220200192648917, "outcome": "passed"}, "call": {"duration": 0.0004214189975755289, "outcome": "passed"}, "teardown": {"duration": 9.846099419519305e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_filled_buy_trade_success", "lineno": 277, "outcome": "passed", "keywords": ["test_load_filled_buy_trade_success", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.50770011311397e-05, "outcome": "passed"}, "call": {"duration": 0.00016321599832735956, "outcome": "passed"}, "teardown": {"duration": 6.643300002906471e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_open_buy_order_corrupted_data", "lineno": 204, "outcome": "passed", "keywords": ["test_load_open_buy_order_corrupted_data", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.834899588488042e-05, "outcome": "passed"}, "call": {"duration": 0.0001632069906918332, "outcome": "passed"}, "teardown": {"duration": 6.623999797739089e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_open_buy_order_not_found", "lineno": 189, "outcome": "passed", "keywords": ["test_load_open_buy_order_not_found", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.33439956093207e-05, "outcome": "passed"}, "call": {"duration": 0.00015469100617337972, "outcome": "passed"}, "teardown": {"duration": 6.65520055918023e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_open_buy_order_success", "lineno": 177, "outcome": "passed", "keywords": ["test_load_open_buy_order_success", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.584600825794041e-05, "outcome": "passed"}, "call": {"duration": 0.00015688200073782355, "outcome": "passed"}, "teardown": {"duration": 6.558900349773467e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_trade_state_corrupted_data_not_dict", "lineno": 132, "outcome": "passed", "keywords": ["test_load_trade_state_corrupted_data_not_dict", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.327999628614634e-05, "outcome": "passed"}, "call": {"duration": 0.001466578003601171, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - ERROR - persistence.load_trade_state:95 - Corrupted trade state file for ADA-USD: content is not a dict. File: tests/mock_data/ADA-USD_trade_state.json\n"}, "teardown": {"duration": 7.867900421842933e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_trade_state_file_not_found", "lineno": 96, "outcome": "passed", "keywords": ["test_load_trade_state_file_not_found", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.550799975637347e-05, "outcome": "passed"}, "call": {"duration": 0.0002135700051439926, "outcome": "passed"}, "teardown": {"duration": 0.00011203699978068471, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_trade_state_json_decode_error", "lineno": 110, "outcome": "passed", "keywords": ["test_load_trade_state_json_decode_error", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.18230037111789e-05, "outcome": "passed"}, "call": {"duration": 0.0012922969908686355, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - ERROR - persistence.load_trade_state:106 - Error decoding JSON from tests/mock_data/XRP-USD_trade_state.json: Error: line 1 column 1 (char 0)\nTraceback (most recent call last):\n  File \"/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/trading/persistence.py\", line 92, in load_trade_state\n    state_data: Dict[str, Any] = json.load(f)\n                                 ^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1134, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1138, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/unittest/mock.py\", line 1193, in _execute_mock_call\n    raise effect\njson.decoder.JSONDecodeError: Error: line 1 column 1 (char 0)\n"}, "teardown": {"duration": 7.388400263153017e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_load_trade_state_success", "lineno": 72, "outcome": "passed", "keywords": ["test_load_trade_state_success", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.397799683734775e-05, "outcome": "passed"}, "call": {"duration": 0.0015810080076334998, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - DEBUG - persistence.load_trade_state:101 - Successfully loaded trade state for BTC-USD from tests/mock_data/BTC-USD_trade_state.json\n"}, "teardown": {"duration": 7.161199755501002e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_save_filled_buy_trade", "lineno": 256, "outcome": "passed", "keywords": ["test_save_filled_buy_trade", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.047600567806512e-05, "outcome": "passed"}, "call": {"duration": 0.0003341410047141835, "outcome": "passed"}, "teardown": {"duration": 6.898900028318167e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_save_open_buy_order", "lineno": 157, "outcome": "passed", "keywords": ["test_save_open_buy_order", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.98339897301048e-05, "outcome": "passed"}, "call": {"duration": 0.0003172650031046942, "outcome": "passed"}, "teardown": {"duration": 6.746800499968231e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_save_trade_state_creates_dir", "lineno": 51, "outcome": "passed", "keywords": ["test_save_trade_state_creates_dir", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.625099144410342e-05, "outcome": "passed"}, "call": {"duration": 0.0012612770078703761, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - DEBUG - persistence.save_trade_state:45 - Successfully saved trade state for ETH-USD to tests/mock_data/ETH-USD_trade_state.json\n"}, "teardown": {"duration": 0.00015331599570345134, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_save_trade_state_success", "lineno": 30, "outcome": "passed", "keywords": ["test_save_trade_state_success", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.639799489174038e-05, "outcome": "passed"}, "call": {"duration": 0.0009546630026306957, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - DEBUG - persistence.save_trade_state:45 - Successfully saved trade state for BTC-USD to tests/mock_data/BTC-USD_trade_state.json\n"}, "teardown": {"duration": 7.067699334584177e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_update_sell_order_status_no_filled_trade", "lineno": 502, "outcome": "passed", "keywords": ["test_update_sell_order_status_no_filled_trade", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.890899723861367e-05, "outcome": "passed"}, "call": {"duration": 0.0003099589957855642, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - ERROR - persistence.update_sell_order_status_in_filled_trade:382 - Cannot update sell order: No filled buy trade found for COMP-USD.\n"}, "teardown": {"duration": 6.867801130283624e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_update_sell_order_status_no_sell_orders_list", "lineno": 514, "outcome": "passed", "keywords": ["test_update_sell_order_status_no_sell_orders_list", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.851400005165488e-05, "outcome": "passed"}, "call": {"duration": 0.0003004249883815646, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - WARNING - persistence.update_sell_order_status_in_filled_trade:392 - No sell orders list found for SNX-USD to update status.\n"}, "teardown": {"duration": 7.948500569909811e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_update_sell_order_status_order_not_found", "lineno": 531, "outcome": "passed", "keywords": ["test_update_sell_order_status_order_not_found", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00023027199495118111, "outcome": "passed"}, "call": {"duration": 0.0008969860064098611, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - WARNING - persistence.update_sell_order_status_in_filled_trade:408 - Sell order nonExistentID not found for MKR-USD to update status.\n"}, "teardown": {"duration": 7.663499854970723e-05, "outcome": "passed"}}, {"nodeid": "tests/test_persistence.py::TestPersistence::test_update_sell_order_status_success", "lineno": 464, "outcome": "passed", "keywords": ["test_update_sell_order_status_success", "__wrapped__", "patchings", "TestPersistence", "test_persistence.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.341801003552973e-05, "outcome": "passed"}, "call": {"duration": 0.00044208999315742403, "outcome": "passed", "stdout": "2025-06-26 16:08:11 - CryptoBotV6 - INFO - persistence.update_sell_order_status_in_filled_trade:404 - Updated status of sell order sellOrderToUpdate to 'FILLED' for AAVE-USD\n"}, "teardown": {"duration": 0.0001745830086292699, "outcome": "passed"}}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_handles_non_numeric_rsi_values", "lineno": 80, "outcome": "passed", "keywords": ["test_handles_non_numeric_rsi_values", "TestSignalAnalyzer", "test_signal_analyzer.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00013587099965661764, "outcome": "passed"}, "call": {"duration": 0.0010401439940324053, "outcome": "passed"}, "teardown": {"duration": 8.360100036952645e-05, "outcome": "passed"}}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_input_validation_raises_assertion_error", "lineno": 61, "outcome": "passed", "keywords": ["test_input_validation_raises_assertion_error", "TestSignalAnalyzer", "test_signal_analyzer.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00011780399654526263, "outcome": "passed"}, "call": {"duration": 0.0015890940121607855, "outcome": "passed"}, "teardown": {"duration": 8.894600614439696e-05, "outcome": "passed"}}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_false_on_rsi_equals_threshold", "lineno": 50, "outcome": "passed", "keywords": ["test_should_buy_asset_false_on_rsi_equals_threshold", "TestSignalAnalyzer", "test_signal_analyzer.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00010099099017679691, "outcome": "passed"}, "call": {"duration": 0.0004723410092992708, "outcome": "passed"}, "teardown": {"duration": 8.452699694316834e-05, "outcome": "passed"}}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_false_when_rsi_above_threshold", "lineno": 36, "outcome": "passed", "keywords": ["test_should_buy_asset_false_when_rsi_above_threshold", "TestSignalAnalyzer", "test_signal_analyzer.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.883700113277882e-05, "outcome": "passed"}, "call": {"duration": 0.0003991429985035211, "outcome": "passed"}, "teardown": {"duration": 8.653600525576621e-05, "outcome": "passed"}}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_false_when_rsi_below_threshold", "lineno": 29, "outcome": "passed", "keywords": ["test_should_buy_asset_false_when_rsi_below_threshold", "TestSignalAnalyzer", "test_signal_analyzer.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00010066101094707847, "outcome": "passed"}, "call": {"duration": 0.00038570498873014003, "outcome": "passed"}, "teardown": {"duration": 8.576500113122165e-05, "outcome": "passed"}}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_false_when_rsi_crosses_down", "lineno": 43, "outcome": "passed", "keywords": ["test_should_buy_asset_false_when_rsi_crosses_down", "TestSignalAnalyzer", "test_signal_analyzer.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00010048800322692841, "outcome": "passed"}, "call": {"duration": 0.00039243300852831453, "outcome": "passed"}, "teardown": {"duration": 8.542599971406162e-05, "outcome": "passed"}}, {"nodeid": "tests/test_signal_analyzer.py::TestSignalAnalyzer::test_should_buy_asset_true_when_rsi_crosses_up", "lineno": 21, "outcome": "passed", "keywords": ["test_should_buy_asset_true_when_rsi_crosses_up", "TestSignalAnalyzer", "test_signal_analyzer.py", "tests/__init__.py", "v6"], "setup": {"duration": 9.998299356084317e-05, "outcome": "passed"}, "call": {"duration": 0.0005591420049313456, "outcome": "passed"}, "teardown": {"duration": 0.0001335239940090105, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_all_nan_close", "lineno": 151, "outcome": "passed", "keywords": ["test_calculate_rsi_all_nan_close", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.0002238449960714206, "outcome": "passed"}, "call": {"duration": 0.0015671480068704113, "outcome": "passed"}, "teardown": {"duration": 8.659099694341421e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_contains_some_nan_close", "lineno": 162, "outcome": "passed", "keywords": ["test_calculate_rsi_contains_some_nan_close", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00010415399447083473, "outcome": "passed"}, "call": {"duration": 0.003937160989153199, "outcome": "passed"}, "teardown": {"duration": 0.0001994479971472174, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_empty_dataframe", "lineno": 97, "outcome": "passed", "keywords": ["test_calculate_rsi_empty_dataframe", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.000150172010762617, "outcome": "passed"}, "call": {"duration": 0.0016443100030301139, "outcome": "passed"}, "teardown": {"duration": 0.0002022849948843941, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_exact_data_points_for_period", "lineno": 215, "outcome": "passed", "keywords": ["test_calculate_rsi_exact_data_points_for_period", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.0001292990054935217, "outcome": "passed"}, "call": {"duration": 0.004052126998431049, "outcome": "passed"}, "teardown": {"duration": 0.00016475599841214716, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_generic_exception", "lineno": 254, "outcome": "passed", "keywords": ["test_calculate_rsi_generic_exception", "__wrapped__", "patchings", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00012080000306013972, "outcome": "passed"}, "call": {"duration": 0.00129779901180882, "outcome": "passed"}, "teardown": {"duration": 9.188000694848597e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_insufficient_data", "lineno": 106, "outcome": "passed", "keywords": ["test_calculate_rsi_insufficient_data", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00012585199146997184, "outcome": "passed"}, "call": {"duration": 0.0015041810111142695, "outcome": "passed"}, "teardown": {"duration": 9.7616997663863e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_missing_close_column", "lineno": 131, "outcome": "passed", "keywords": ["test_calculate_rsi_missing_close_column", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.0001138889929279685, "outcome": "passed"}, "call": {"duration": 0.0009323979902546853, "outcome": "passed"}, "teardown": {"duration": 9.222699736710638e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_non_numeric_close_column", "lineno": 140, "outcome": "passed", "keywords": ["test_calculate_rsi_non_numeric_close_column", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00017584800662007183, "outcome": "passed"}, "call": {"duration": 0.001153451987192966, "outcome": "passed"}, "teardown": {"duration": 8.825799159239978e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_rsi_valid_data", "lineno": 40, "outcome": "passed", "keywords": ["test_calculate_rsi_valid_data", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00010630801261868328, "outcome": "passed"}, "call": {"duration": 0.003060464994632639, "outcome": "passed"}, "teardown": {"duration": 9.456499537918717e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_all_nan_close", "lineno": 354, "outcome": "passed", "keywords": ["test_calculate_sma_all_nan_close", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00010910400305874646, "outcome": "passed"}, "call": {"duration": 0.0010226089943898842, "outcome": "passed"}, "teardown": {"duration": 8.702100603841245e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_contains_some_nan_close", "lineno": 368, "outcome": "passed", "keywords": ["test_calculate_sma_contains_some_nan_close", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.0001076460030162707, "outcome": "passed"}, "call": {"duration": 0.0014094780053710565, "outcome": "passed"}, "teardown": {"duration": 8.775400056038052e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_empty_dataframe", "lineno": 308, "outcome": "passed", "keywords": ["test_calculate_sma_empty_dataframe", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.0001062340015778318, "outcome": "passed"}, "call": {"duration": 0.0009213980083586648, "outcome": "passed"}, "teardown": {"duration": 7.183999696280807e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_exact_data_points_for_period", "lineno": 392, "outcome": "passed", "keywords": ["test_calculate_sma_exact_data_points_for_period", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.227300713770092e-05, "outcome": "passed"}, "call": {"duration": 0.001964183000382036, "outcome": "passed"}, "teardown": {"duration": 0.00010158700752072036, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_generic_exception", "lineno": 436, "outcome": "passed", "keywords": ["test_calculate_sma_generic_exception", "__wrapped__", "patchings", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00011742800415959209, "outcome": "passed"}, "call": {"duration": 0.0011464450071798638, "outcome": "passed"}, "teardown": {"duration": 8.584799070376903e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_insufficient_data", "lineno": 319, "outcome": "passed", "keywords": ["test_calculate_sma_insufficient_data", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.493100176565349e-05, "outcome": "passed"}, "call": {"duration": 0.00073815300129354, "outcome": "passed"}, "teardown": {"duration": 7.161199755501002e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_missing_close_column", "lineno": 332, "outcome": "passed", "keywords": ["test_calculate_sma_missing_close_column", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00011879300291184336, "outcome": "passed"}, "call": {"duration": 0.0007349980005528778, "outcome": "passed"}, "teardown": {"duration": 7.578299846500158e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_non_numeric_close_column", "lineno": 343, "outcome": "passed", "keywords": ["test_calculate_sma_non_numeric_close_column", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.36020044516772e-05, "outcome": "passed"}, "call": {"duration": 0.0006058839935576543, "outcome": "passed"}, "teardown": {"duration": 6.99989905115217e-05, "outcome": "passed"}}, {"nodeid": "tests/test_technical_analysis.py::TestTechnicalAnalysis::test_calculate_sma_valid_data", "lineno": 281, "outcome": "passed", "keywords": ["test_calculate_sma_valid_data", "TestTechnicalAnalysis", "test_technical_analysis.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.728600758127868e-05, "outcome": "passed"}, "call": {"duration": 0.0008730329864192754, "outcome": "passed"}, "teardown": {"duration": 0.0001419670006725937, "outcome": "passed"}}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_filled_buy_order_checks_existing_sell_orders", "lineno": 222, "outcome": "passed", "keywords": ["test_handle_filled_buy_order_checks_existing_sell_orders", "TestTradeManager", "test_trade_manager.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00016031898849178106, "outcome": "passed"}, "call": {"duration": 0.001023122007609345, "outcome": "passed"}, "teardown": {"duration": 7.259199628606439e-05, "outcome": "passed"}}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_filled_buy_order_places_new_sell_orders", "lineno": 178, "outcome": "failed", "keywords": ["test_handle_filled_buy_order_places_new_sell_orders", "TestTradeManager", "test_trade_manager.py", "tests/__init__.py", "v6"], "setup": {"duration": 7.98800028860569e-05, "outcome": "passed"}, "call": {"duration": 0.0011545659945113584, "outcome": "failed", "crash": {"path": "/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/tests/test_trade_manager.py", "lineno": 212, "message": "AssertionError: Expected 'add_sell_order_to_filled_trade' to be called once. Called 0 times."}, "traceback": [{"path": "tests/test_trade_manager.py", "lineno": 212, "message": "AssertionError"}], "longrepr": "self = <MagicMock name='mock.add_sell_order_to_filled_trade' id='140005041450752'>\nargs = ()\nkwargs = {'asset_id': 'BTC-USD', 'sell_order_details': {'order_id': 'sell-456', 'price': '102.00', 'size': '1.0', 'status': 'OPEN'}, 'sell_order_id': 'sell-456'}\nmsg = \"Expected 'add_sell_order_to_filled_trade' to be called once. Called 0 times.\"\n\n    def assert_called_once_with(self, /, *args, **kwargs):\n        \"\"\"assert that the mock was called exactly once and that that call was\n        with the specified arguments.\"\"\"\n        if not self.call_count == 1:\n            msg = (\"Expected '%s' to be called once. Called %s times.%s\"\n                   % (self._mock_name or 'mock',\n                      self.call_count,\n                      self._calls_repr()))\n>           raise AssertionError(msg)\nE           AssertionError: Expected 'add_sell_order_to_filled_trade' to be called once. Called 0 times.\n\n/usr/lib/python3.12/unittest/mock.py:955: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_trade_manager.TestTradeManager testMethod=test_handle_filled_buy_order_places_new_sell_orders>\n\n    def test_handle_filled_buy_order_places_new_sell_orders(self):\n        \"\"\"Test placing sell orders after a buy order is filled.\"\"\"\n        # Arrange: A filled buy trade exists with no associated sell orders\n        filled_buy = {\n            \"buy_order_id\": \"buy-123\",\n            \"buy_price\": \"100.00\",\n            \"buy_quantity\": \"1.0\",\n            \"associated_sell_orders\": [],\n        }\n        self.mock_persistence.load_trade_state.return_value = {\n            \"filled_buy_trade\": filled_buy\n        }\n        self.mock_config.TRADING_PAIRS[\"BTC-USD\"][\"sell_profit_tiers\"] = [\n            {\"profit_target\": 0.02, \"quantity_percentage\": 1.0}\n        ]\n        self.mock_client.limit_order_sell.return_value = {\n            \"success\": True,\n            \"order_id\": \"sell-456\",\n        }\n        self.mock_order_calculator.determine_sell_orders_params.return_value = [\n            {\"limit_price\": \"102.00\", \"base_size\": \"1.0\"}\n        ]\n    \n        # Act\n        self.trade_manager.process_asset_trade_cycle(\"BTC-USD\")\n    \n        # Assert\n        self.mock_client.limit_order_sell.assert_called_once_with(\n            product_id=\"BTC-USD\",\n            base_size=\"1.0\",\n            limit_price=\"102.00\",\n            client_order_id=unittest.mock.ANY,\n        )\n>       self.mock_persistence.add_sell_order_to_filled_trade.assert_called_once_with(\n            asset_id=\"BTC-USD\",\n            sell_order_id=\"sell-456\",\n            sell_order_details={\n                \"order_id\": \"sell-456\",\n                \"price\": \"102.00\",\n                \"size\": \"1.0\",\n                \"status\": \"OPEN\",\n            },\n        )\nE       AssertionError: Expected 'add_sell_order_to_filled_trade' to be called once. Called 0 times.\n\ntests/test_trade_manager.py:212: AssertionError"}, "teardown": {"duration": 0.00012555799912661314, "outcome": "passed"}}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_new_buy_order_does_not_place_order_on_no_signal", "lineno": 115, "outcome": "passed", "keywords": ["test_handle_new_buy_order_does_not_place_order_on_no_signal", "TestTradeManager", "test_trade_manager.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.0001009539992082864, "outcome": "passed"}, "call": {"duration": 0.0021762949909316376, "outcome": "passed"}, "teardown": {"duration": 7.825699867680669e-05, "outcome": "passed"}}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_new_buy_order_places_order_on_signal", "lineno": 69, "outcome": "passed", "keywords": ["test_handle_new_buy_order_places_order_on_signal", "TestTradeManager", "test_trade_manager.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00011443000403232872, "outcome": "passed"}, "call": {"duration": 0.002125170998624526, "outcome": "passed"}, "teardown": {"duration": 7.616801303811371e-05, "outcome": "passed"}}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_open_buy_order_is_filled", "lineno": 131, "outcome": "passed", "keywords": ["test_handle_open_buy_order_is_filled", "TestTradeManager", "test_trade_manager.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.785500540398061e-05, "outcome": "passed"}, "call": {"duration": 0.001417974999640137, "outcome": "passed"}, "teardown": {"duration": 7.369300874415785e-05, "outcome": "passed"}}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_handle_open_buy_order_is_still_open", "lineno": 162, "outcome": "passed", "keywords": ["test_handle_open_buy_order_is_still_open", "TestTradeManager", "test_trade_manager.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.501300180796534e-05, "outcome": "passed"}, "call": {"duration": 0.0010305010073352605, "outcome": "passed"}, "teardown": {"duration": 7.315099355764687e-05, "outcome": "passed"}}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_process_cycle_handles_no_config", "lineno": 56, "outcome": "failed", "keywords": ["test_process_cycle_handles_no_config", "TestTradeManager", "test_trade_manager.py", "tests/__init__.py", "v6"], "setup": {"duration": 8.46190087031573e-05, "outcome": "passed"}, "call": {"duration": 0.0013911440037190914, "outcome": "failed", "crash": {"path": "/home/gman/workspace/Crypto-Bots/Active/Single-File/v6/tests/test_trade_manager.py", "lineno": 60, "message": "AssertionError: expected call not found.\nExpected: error('[BTC-USD] Configuration not found.')\n  Actual: not called."}, "traceback": [{"path": "tests/test_trade_manager.py", "lineno": 60, "message": "AssertionError"}], "longrepr": "self = <MagicMock name='mock.error' id='140005037918688'>\nargs = ('[BTC-USD] Configuration not found.',), kwargs = {}\nexpected = \"error('[BTC-USD] Configuration not found.')\"\nactual = 'not called.'\nerror_message = \"expected call not found.\\nExpected: error('[BTC-USD] Configuration not found.')\\n  Actual: not called.\"\n\n    def assert_called_with(self, /, *args, **kwargs):\n        \"\"\"assert that the last call was made with the specified arguments.\n    \n        Raises an AssertionError if the args and keyword args passed in are\n        different to the last call to the mock.\"\"\"\n        if self.call_args is None:\n            expected = self._format_mock_call_signature(args, kwargs)\n            actual = 'not called.'\n            error_message = ('expected call not found.\\nExpected: %s\\n  Actual: %s'\n                    % (expected, actual))\n>           raise AssertionError(error_message)\nE           AssertionError: expected call not found.\nE           Expected: error('[BTC-USD] Configuration not found.')\nE             Actual: not called.\n\n/usr/lib/python3.12/unittest/mock.py:935: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_trade_manager.TestTradeManager testMethod=test_process_cycle_handles_no_config>\n\n    def test_process_cycle_handles_no_config(self):\n        \"\"\"Test that the trade cycle exits gracefully if asset config is missing.\"\"\"\n        self.trade_manager.process_asset_trade_cycle(\"BTC-USD\")\n>       self.mock_logger.error.assert_called_with(\"[BTC-USD] Configuration not found.\")\nE       AssertionError: expected call not found.\nE       Expected: error('[BTC-USD] Configuration not found.')\nE         Actual: not called.\n\ntests/test_trade_manager.py:60: AssertionError"}, "teardown": {"duration": 0.00018739799270406365, "outcome": "passed"}}, {"nodeid": "tests/test_trade_manager.py::TestTradeManager::test_process_cycle_handles_no_product_details", "lineno": 61, "outcome": "passed", "keywords": ["test_process_cycle_handles_no_product_details", "TestTradeManager", "test_trade_manager.py", "tests/__init__.py", "v6"], "setup": {"duration": 0.00016259199765045196, "outcome": "passed"}, "call": {"duration": 0.0011676069989334792, "outcome": "passed"}, "teardown": {"duration": 0.00014041800750419497, "outcome": "passed"}}]}